{"name":"Config-server","tagline":"Helpful Instructions to Configuring an Ubuntu Server","body":"# Config Server\r\nThis is a guide to install a server for an **Ubuntu 14 LTS** server. You could likely use different versions.\r\n\r\n---\r\n\r\n# Table of Contents\r\n- [Security](#security)\r\n    - [Update](#update)\r\n    - [Firewall UFW](#firewall-ufw)\r\n    - [SSH and Users](#ssh-and-users)\r\n    - [Fail2Ban](#fail2ban)\r\n    - [Rootkits](#rootkits)\r\n    - [Unattended Upgrades](#unattended-upgrades)\r\n    - [Apache2 Mod-Evasive](#apache2-mod-evasive)\r\n- [Packages](#packages)\r\n    - [Common Items](#common-items)\r\n    - [Enable PPA Repositories](#enable-ppa-repositories)\r\n- [Commands](#commands)\r\n    - [SSH Welcome Message](#ssh-welcome-message)  \r\n    - [Searching](#searching)\r\n    - [User Management](#user-management)\r\n    - [SFTP User](#sftp-user)\r\n- [Manage Network Scripts](#manage-network-scripts)\r\n    - [Checking Ports](#checking-ports)\r\n\r\n---\r\n#Security\r\nThese are necessities to keep your server secure. Not everything will be covered but some of the most important.\r\n\r\n###Update\r\nWith any new installation you want to update!\r\n\r\n    sudo apt-get update\r\n    sudo apt-get upgrade -y\r\n\r\n###Firewall UFW\r\nUFW is the uncomplicated firewall.\r\n\r\n    sudo ufw enable\r\n    sudo ufw allow 80\r\n    sudo ufw allow 443\r\n    sudo ufw allow ssh\r\n    sudo ufw allow 911 <or any number>\r\n\r\nSee your Firewall Rules:\r\n\r\n    sudo ufw status verbose\r\n\r\n###SSH and Users\r\nYou should first create a **non-root** user. Since default logins are root on port 22:\r\n\r\n    sudo useradd -m -s /bin/bash user1\r\n    passwd user1\r\n\r\nWe need **user1** him to be a **super-user (su)**. Add your in visudo:\r\n\r\n    $ visudo\r\n    --------\r\n    # User privilege specification\r\n    root    ALL=(ALL:ALL) ALL\r\n    user1   ALL=(ALL:ALL) ALL\r\n\r\n#####Change Default SSH Port\r\nTo change the default port of `22` to something else of your choice:\r\n\r\n    $ sudo vim /etc/ssh/sshd_config\r\n    -------------------------------\r\n    Port 22              # Change to: 1234\r\n    PermitRootLogin yes  # Change to: no\r\n\r\nReload SSH Configuration:\r\n\r\n    sudo service ssh reload\r\n\r\n#####Make Sure You can Login\r\nTest your new user by keeping your current terminal connected and opening a second terminal:\r\n\r\n    ssh user1@ip_address -p1234\r\n\r\nAlso make sure you can use sudo, so type `su -`\r\n\r\n#####User SSH Login\r\n---\r\n\r\nAs your new user (**user1**), if you want to login with an SSH key, make sure you have a key on your **local** machine.\r\n\r\n    ssh-keygen -t rsa -b 4096 -C \"your-email@domain.com\"\r\n\r\nCreate your **remote** SSH folder and authorized_keys. Paste your `id_rsa.pub`to authorized_host:\r\n\r\n    mkdir ~/.ssh\r\n    vim /etc/authorized_keys\r\n\r\nYour **local** `~/.ssh/id_rsa.pub` must match the **remote** `~/.ssh/authorized_keys`. Make sure it's on **one line!**\r\n\r\n#####SSH File Permissions\r\nHere are the permissions for your files (local and remote).\r\n\r\n    chmod 700 ~/.ssh &&\\\r\n    chmod 600 ~/.ssh/authorized_keys &&\\\r\n    chmod 644 ~/.ssh/id_rsa.pub &&\\\r\n    chmod 600 ~/.ssh/id_rsa\r\n\r\nDon't keep your `id_rsa` private key on the **remote** host, all you need to login is the `authorized_keys` file. _Only host your private key for a locked down user for deployments._\r\n\r\n#####Quick SSH Login\r\nOn your local machine edit or create an ssh config for quick connection:\r\n\r\n    $ vim ~/.ssh/config\r\n    -------------------\r\n    Host myhost\r\n    Hostname 123.123.123.555\r\n    Port 1234\r\n    User user1\r\n\r\nYou should now be able to connect with:\r\n\r\n    ssh myhost\r\n\r\n###Fail2Ban\r\nBans IPs that attempt too many password failures, searching for exploits and the like. The default configuration is good.\r\n\r\n    sudo apt-get install fail2ban\r\n\r\n###Rootkits\r\n\r\n    sudo apt-get install chkrootkit rkhunter\r\n\r\nEdit the chkrootkit configuration:\r\n\r\n    sudo vim /etc/chkrootkit.conf\r\n\r\nWe will run both weekly; However we need to change the configuration:\r\n\r\n    RUN_DAILY=\"true\"\r\n    RUN_DAILY_OPTS=\"\"\r\n    DIFF_MODE=\"false\"\r\n\r\nFor your reference, rkhunter's configuration file is located here: `/etc/default/rkhunter`\r\n\r\nRename the rkhunter's update job with a different name before moving the other items to the weekly CRON:\r\n\r\n    sudo mv /etc/cron.weekly/rkhunter /etc/cron.weekly/rkhunter_update\r\n\r\nNext move the daily CRON to the weekly:\r\n\r\n    sudo mv /etc/cron.daily/chkrootkit /etc/cron.weekly\r\n    sudo mv /etc/cron.daily/rkhunter /etc/cron.weekly\r\n\r\n\r\n###Unattended Upgrades\r\nKeep security updates on a cron.\r\n\r\n    sudo apt-get install unattended-upgrades\r\n\r\nEdit the periodic updated file:\r\n\r\n    sudo vim /etc/apt/apt.conf.d/10periodic\r\n\r\nUpdate your values to something like this:\r\n\r\n    APT::Periodic::Update-Package-Lists \"1\";\r\n    APT::Periodic::Download-Upgradeable-Packages \"1\";\r\n    APT::Periodic::AutocleanInterval \"7\";\r\n    APT::Periodic::Unattended-Upgrade \"1\";\r\n\r\n\r\n\r\n###Apache2 Mod-Evasive\r\nThis is useful for DDOS attacks. First install the needed packages.\r\n\r\n    sudo apt-get install apache2 apache2-utils libapache2-mod-evasive\r\n\r\nCreate the log directory.\r\n\r\n    sudo mkdir /var/log/mod_evasive\r\n    sudo chown www-data:www-data /var/log/mod_evasive\r\n\r\nEdit the configuration file:\r\n\r\n    sudo vim /etc/apache2/mods-available/mod_evasive.conf\r\n\r\nUncomment everything except `DOSSystemCommand` and add your email after `DOSEmailNotify`.\r\n\r\nReload Apache:\r\n\r\n    sudo a2enmod evasive\r\n    sudo service apache2 reload\r\n\r\n#Packages\r\nThe location for aptitude `apt` package sources is:\r\n\r\n    /etc/apt/sources.list     # This is one long file of defaults\r\n    /etc/apt/sources.list.d/  # These are separate files for things like PPA adding\r\n    \r\nIf you choose to manually add a package I would recommend adding it to the `/etc/apt/sources.list.d/your-source.list` directory, that way you can just delete it and `sudo apt-get update` if you don't want it -- rather than editing the main `sources.list` file.\r\n\r\n###Common Items\r\nThese are some common packages you can use. If you prefer `nginx` over `apache` then install that instead.\r\n\r\n    sudo apt-get install\\\r\n    git htop xclip\\\r\n    python-dev python-pip\\\r\n    php5 php5-dev\\\r\n    apache2 apache2-utils\r\n\r\n\r\n###Enable PPA Repositories\r\nThis should exist by default, but if it doesn't install it:\r\n\r\n    sudo apt-get install python-software-properties\r\n\r\n#Commands\r\nThese are commands for reference.\r\n\r\n###SSH Welcome Message\r\nWhen you login to your SSH, you can add a custom welcome banner that looks cool:\r\n\r\n    sudo vim /etc/ssh/sshd_config\r\n    Banner /etc/banner\r\n\r\nThen create the file and add anything you want:\r\n\r\n    sudo vim /etc/banner\r\n    \r\nHere is an example:\r\n```\r\n   __ _____ _____ _____ _____ \r\n __|  | __  |   __|  _  |     |\r\n|  |  |    -|   __|     | | | |\r\n|_____|__|__|_____|__|__|_|_|_|\r\n-------------------------------\r\nServer 01               Welcome\r\n-------------------------------\r\n```\r\n    \r\nI used a text to ASCII generator for that. Then restart and it will appear next time you login!\r\n\r\n    sudo service ssh restart\r\n\r\n##Searching\r\n\r\nSearch for a filename from system path\r\n\r\n    $ find / --name filename\r\n\r\nSearch the contents of a file\r\n\r\n    $ cat filename | grep \"text-to-find-here\"\r\n\r\nSearch within files in the current directory\r\n\r\n    $ grep -Ril \"text-to-find-here\" .\r\n\r\n    R (recursive)\r\n    i (case insensitive)\r\n    l (show the file name, not the result itself)\r\n\r\n##User Management\r\n\r\nSee the user defaults, and add a user with the defaults:\r\n\r\n    useradd -D\r\n    useradd user2\r\n\r\n    useradd -m user2                # Create Home, Default Shell\r\n    useradd -m -s /bin/bash user2   # Set Shell, Create Home\r\n\r\n    passwd user2                     # Change Passwd\r\n    userdel user2                     # Delete User\r\n\r\n    cat /etc/passwd # See Users\r\n    cat /etc/group # See Groups\r\n\r\nManually Add sudo (Super User)\r\n\r\n    $ visudo\r\n    --------\r\n    user2 ALL=(ALL) ALL\r\n\r\nChange a users shell\r\n\r\n    sudo chsh -s /bin/bash user2\r\n\r\nAdd Existing user to Existing Group\r\n\r\n    usermod -a -G www-data user2\r\n\r\n##SFTP User\r\nFor SFTP Access you should create a group an ddo the following:\r\n\r\n    sudo groupadd sftp_users\r\n    sudo usermod -G sftp_users user2\r\n\r\nFor a webserver, you should add the webserver group AS WELL\r\n\r\n    sudo usermod -G www-data user2\r\n\r\nEdit your SSHD config and append to the end of the file\r\n\r\n    $ sudo vim /etc/ssh/sshd_config\r\n    -------------------------------\r\n    Match group filetransfer\r\n        ChrootDirectory %h\r\n        X11Forwarding no\r\n        AllowTcpForwarding no\r\n        ForceCommand internal-sftp\r\n\r\nRestart SSH\r\n\r\n    sudo service ssh restart\r\n\r\n#Manage Network Scripts\r\nYou can add your own startup/shutdown scripts and the like in folders in this area:\r\n\r\n    /etc/network/if-down.d/\r\n    /etc/network/if-pre-up.d/\r\n\r\nJust make sure to `chmod +x filename.sh`\r\n\r\n##Checking Ports\r\nBeginner commands to [http://www.linux.com/learn/tutorials/290879-beginners-guide-to-nmap](nmap)\r\n\r\n    apt-get install nmap\r\n\r\nThere are many ways to check open ports:\r\n\r\n    sudo ufw status\r\n    sudo nmap -sT -O localhost\r\n\r\nOther ways to check ports\r\n\r\n    netstat -anp | grep 222\r\n    lsof -i | grep 222\r\n    telnet localhost 222\r\n\r\n---\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that notice appear in all copies.\r\n\r\n&copy;2016 MIT License | Jesse Boyer | JREAM.com\r\n","google":"UA-3106599-2","note":"Don't delete this file! It's used internally to help with page regeneration."}